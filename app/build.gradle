apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    signingConfigs {
        release {
            keyAlias 'zane'
            keyPassword 'zane618'
            storeFile file('/Users/shizhang/AndroidStudioProjects/L/app/signfile.jks')
            storePassword 'zane618'
        }
    }
    compileSdkVersion project.COMPILE_SDK_VERSION as int
    buildToolsVersion project.BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.zane.l"
        minSdkVersion project.MIN_SDK_VERSION
        targetSdkVersion project.TARGET_SDK_VERSION
        versionCode project.VERSION_CODE as int
        versionName project.VERSION_NAME
        multiDexEnabled true
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            shrinkResources true//移除无用的resource文件
            zipAlignEnabled true //Zipalign优化
        }
        debug {
            buildConfigField "boolean", "LOG", "true"
            signingConfig signingConfigs.release
        }
    }
    //多渠道
    productFlavors {
        mytest{}
//        yingyongbao {}
//        ali {}
//        wandoujia {}
//        baidu {}
////        _360 {}
//        _91 {}
//        anzhuo {}
//        uc {}
//        huawei {}
//        vivo {}
//        xiaomi {}
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    //多渠道
    // release版本 apk重命名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
//        exculde 'META-INF/maven/com.squareup.okio/okio/pom.properties'
    }
    sourceSets{
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    repositories {
        flatDir {
            dirs 'libs','../libads/libs'
        }
    }

    dependencies {
        compile fileTree(include: ['*.jar'], dir: 'libs')
        compile project(':common')
        compile project(':libbmob')
//        compile project(':libshare')
        compile "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
        compile project(path: ':magicindicator')
        compile 'com.facebook.rebound:rebound:0.3.8'
        //弹性动画
        compile project(':libpickerview')
//        compile project(':libads')
        compile project(':photoview')
        //友盟统计
        compile 'com.umeng.analytics:analytics:latest.integration'
        compile 'org.greenrobot:greendao:3.2.2' // add library

        // 微信（主要测试拉起小程序
        compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    }
}

